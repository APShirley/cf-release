<%
  require 'json'

  def discover_external_ip
    networks = spec.networks.marshal_dump

    _, network = networks.find do |_name, network_spec|
      network_spec.default
    end

    if !network
      _, network = networks.first
    end

    if !network
      raise "Could not determine IP via network spec: #{networks}"
    end

    network.ip
  end
%>
---
message_bus_servers:
<%
  nats_config = nil
  if_link("nats") do |nats|
    nats_config = {}
    nats_config["machines"] = nats.p("nats.machines")
    nats_config["user"] = nats.p("nats.user")
    nats_config["password"] = nats.p("nats.password")
    nats_config["port"] = nats.p("nats.port")
  end

  nats_config = p("nats") unless nats_config
%>

<% nats_config['machines'].each do |ip| %>
    - host: <%= ip %>:<%= nats_config['port'] %>
      user: <%= nats_config['user'] %>
      password: <%= nats_config['password'] %>
<% end %>

routes: <%= p('route_registrar.routes').to_json %>

host: <%= discover_external_ip %>
